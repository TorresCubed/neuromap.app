{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import React from\"react\";import\"./Arrow.css\";var Arrow=function Arrow(_ref){var start=_ref.start,end=_ref.end;var arrowHeight=end[0]-start[0];var arrowWidth=end[1]-start[1];var arrowLength=Math.sqrt(arrowHeight*arrowHeight+arrowWidth*arrowWidth)-4;var arrowRotation=180/Math.PI*Math.atan2(arrowHeight,arrowWidth);var lineInfo={top:start[0]+\"px\",left:start[1]+\"px\",width:arrowLength+\"px\",transform:\"rotate(\"+arrowRotation+\"deg)\"};return/*#__PURE__*/_jsx(\"div\",{style:lineInfo,className:\"line\",children:/*#__PURE__*/_jsx(\"div\",{className:\"arrow\"})});};export default Arrow;","map":{"version":3,"sources":["C:/Users/torre/Desktop/neuroMap.app/src/Arrow.js"],"names":["React","Arrow","start","end","arrowHeight","arrowWidth","arrowLength","Math","sqrt","arrowRotation","PI","atan2","lineInfo","top","left","width","transform"],"mappings":"2CAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,aAAP,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAoB,IAAjBC,CAAAA,KAAiB,MAAjBA,KAAiB,CAAVC,GAAU,MAAVA,GAAU,CAChC,GAAMC,CAAAA,WAAW,CAAGD,GAAG,CAAC,CAAD,CAAH,CAASD,KAAK,CAAC,CAAD,CAAlC,CACA,GAAMG,CAAAA,UAAU,CAAGF,GAAG,CAAC,CAAD,CAAH,CAASD,KAAK,CAAC,CAAD,CAAjC,CACA,GAAMI,CAAAA,WAAW,CACfC,IAAI,CAACC,IAAL,CAAUJ,WAAW,CAAGA,WAAd,CAA4BC,UAAU,CAAGA,UAAnD,EAAiE,CADnE,CAEA,GAAMI,CAAAA,aAAa,CAAI,IAAMF,IAAI,CAACG,EAAZ,CAAkBH,IAAI,CAACI,KAAL,CAAWP,WAAX,CAAwBC,UAAxB,CAAxC,CAEA,GAAMO,CAAAA,QAAQ,CAAG,CACfC,GAAG,CAAEX,KAAK,CAAC,CAAD,CAAL,CAAW,IADD,CAEfY,IAAI,CAAEZ,KAAK,CAAC,CAAD,CAAL,CAAW,IAFF,CAGfa,KAAK,CAAET,WAAW,CAAG,IAHN,CAIfU,SAAS,CAAE,UAAYP,aAAZ,CAA4B,MAJxB,CAAjB,CAOA,mBACE,YAAK,KAAK,CAAEG,QAAZ,CAAsB,SAAS,CAAC,MAAhC,uBACE,YAAK,SAAS,CAAC,OAAf,EADF,EADF,CAKD,CAnBD,CAqBA,cAAeX,CAAAA,KAAf","sourcesContent":["import React from \"react\";\r\nimport \"./Arrow.css\";\r\n\r\nconst Arrow = ({ start, end }) => {\r\n  const arrowHeight = end[0] - start[0];\r\n  const arrowWidth = end[1] - start[1];\r\n  const arrowLength =\r\n    Math.sqrt(arrowHeight * arrowHeight + arrowWidth * arrowWidth) - 4;\r\n  const arrowRotation = (180 / Math.PI) * Math.atan2(arrowHeight, arrowWidth);\r\n\r\n  const lineInfo = {\r\n    top: start[0] + \"px\",\r\n    left: start[1] + \"px\",\r\n    width: arrowLength + \"px\",\r\n    transform: \"rotate(\" + arrowRotation + \"deg)\",\r\n  };\r\n\r\n  return (\r\n    <div style={lineInfo} className=\"line\">\r\n      <div className=\"arrow\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Arrow;\r\n"]},"metadata":{},"sourceType":"module"}