{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from \"react\";\nimport update from \"immutability-helper\";\nimport axios from \"axios\";\nexport function useIdeaManager() {\n  _s();\n\n  const [selectedId, setSelectedId] = useState(\"a\");\n  const initialState = axios.get(\"http://localHost:9999/api/v1/ideas\").then(res => {\n    return res.data.reduce((obj, item) => ({ ...obj,\n      [item[\"id\"]]: item\n    }), {});\n  });\n  console.log(initialState);\n  const [ideas, ideasDispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"update\":\n        return update(state, {\n          [action.id]: {\n            $merge: action.data\n          }\n        });\n\n      case \"create\":\n        return update(state, {\n          [action.id]: {\n            $set: Object.assign({\n              id: action.id,\n              linkList: new Set()\n            }, action.data)\n          }\n        });\n\n      case \"link\":\n        return update(state, {\n          [action.fromId]: {\n            linkList: {\n              $add: [action.toId]\n            }\n          }\n        });\n\n      default:\n        throw new Error(`Unexpected action type: ${action.type}`);\n    }\n  }, // {\n  //   a: {\n  //     id: \"a\",\n  //     top: 20,\n  //     left: 80,\n  //     content: \"Here is an Example to get you Started\",\n  //     linkList: new Set(\"b\"),\n  //   },\n  //   b: {\n  //     id: \"b\",\n  //     top: 180,\n  //     left: 20,\n  //     content: \"Great Idea!\",\n  //     linkList: new Set(),\n  //   },\n  // },\n  initialState);\n  return {\n    ideas: ideas,\n    ideasDispatch: ideasDispatch,\n    selectedId: selectedId,\n    setSelectedId: setSelectedId\n  };\n}\n\n_s(useIdeaManager, \"s1RB1mGXoDBUUQ4Y9Yg09hGmXkg=\");\n\nexport const IdeaContext = /*#__PURE__*/React.createContext();","map":{"version":3,"sources":["C:/Users/torre/Documents/neuromap.app/src/main/frontend/src/IdeaContext.js"],"names":["React","useReducer","useState","update","axios","useIdeaManager","selectedId","setSelectedId","initialState","get","then","res","data","reduce","obj","item","console","log","ideas","ideasDispatch","state","action","type","id","$merge","$set","Object","assign","linkList","Set","fromId","$add","toId","Error","IdeaContext","createContext"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,cAAT,GAA0B;AAAA;;AAC/B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,GAAD,CAA5C;AACA,QAAMM,YAAY,GAAGJ,KAAK,CAACK,GAAN,CAAU,oCAAV,EAAgDC,IAAhD,CACjBC,GAAG,IAAG;AACJ,WAAOA,GAAG,CAACC,IAAJ,CAASC,MAAT,CACL,CAACC,GAAD,EAAMC,IAAN,MAAgB,EACd,GAAGD,GADW;AACN,OAACC,IAAI,CAAC,IAAD,CAAL,GAAcA;AADR,KAAhB,CADK,EAGD,EAHC,CAAP;AAIC,GANc,CAArB;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ;AAGA,QAAM,CAACU,KAAD,EAAQC,aAAR,IAAyBlB,UAAU,CACvC,CAACmB,KAAD,EAAQC,MAAR,KAAmB;AACjB,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,QAAL;AACE,eAAOnB,MAAM,CAACiB,KAAD,EAAQ;AACnB,WAACC,MAAM,CAACE,EAAR,GAAa;AACXC,YAAAA,MAAM,EAAEH,MAAM,CAACT;AADJ;AADM,SAAR,CAAb;;AAKF,WAAK,QAAL;AACE,eAAOT,MAAM,CAACiB,KAAD,EAAQ;AACnB,WAACC,MAAM,CAACE,EAAR,GAAa;AACXE,YAAAA,IAAI,EAAEC,MAAM,CAACC,MAAP,CACJ;AAAEJ,cAAAA,EAAE,EAAEF,MAAM,CAACE,EAAb;AAAiBK,cAAAA,QAAQ,EAAE,IAAIC,GAAJ;AAA3B,aADI,EAEJR,MAAM,CAACT,IAFH;AADK;AADM,SAAR,CAAb;;AAQF,WAAK,MAAL;AACE,eAAOT,MAAM,CAACiB,KAAD,EAAQ;AACnB,WAACC,MAAM,CAACS,MAAR,GAAiB;AACfF,YAAAA,QAAQ,EAAE;AAAEG,cAAAA,IAAI,EAAE,CAACV,MAAM,CAACW,IAAR;AAAR;AADK;AADE,SAAR,CAAb;;AAKF;AACE,cAAM,IAAIC,KAAJ,CAAW,2BAA0BZ,MAAM,CAACC,IAAK,EAAjD,CAAN;AAvBJ;AAyBD,GA3BsC,EA4BvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAd,EAAAA,YA5CuC,CAAzC;AA+CA,SAAO;AACLU,IAAAA,KAAK,EAAEA,KADF;AAELC,IAAAA,aAAa,EAAEA,aAFV;AAGLb,IAAAA,UAAU,EAAEA,UAHP;AAILC,IAAAA,aAAa,EAAEA;AAJV,GAAP;AAMD;;GAlEeF,c;;AAoEhB,OAAO,MAAM6B,WAAW,gBAAGlC,KAAK,CAACmC,aAAN,EAApB","sourcesContent":["import React, { useReducer, useState } from \"react\";\r\nimport update from \"immutability-helper\";\r\nimport axios from \"axios\";\r\n\r\nexport function useIdeaManager() {\r\n  const [selectedId, setSelectedId] = useState(\"a\");\r\n  const initialState = axios.get(\"http://localHost:9999/api/v1/ideas\").then(\r\n      res =>{\r\n        return res.data.reduce(\r\n          (obj, item) => ({\r\n            ...obj, [item[\"id\"]]: item\r\n          }), {})\r\n        }\r\n      )\r\n  console.log(initialState)\r\n\r\n\r\n  const [ideas, ideasDispatch] = useReducer(\r\n    (state, action) => {\r\n      switch (action.type) {\r\n        case \"update\":\r\n          return update(state, {\r\n            [action.id]: {\r\n              $merge: action.data,\r\n            },\r\n          });\r\n        case \"create\":\r\n          return update(state, {\r\n            [action.id]: {\r\n              $set: Object.assign(\r\n                { id: action.id, linkList: new Set() },\r\n                action.data\r\n              ),\r\n            },\r\n          });\r\n        case \"link\":\r\n          return update(state, {\r\n            [action.fromId]: {\r\n              linkList: { $add: [action.toId] },\r\n            },\r\n          });\r\n        default:\r\n          throw new Error(`Unexpected action type: ${action.type}`);\r\n      }\r\n    },\r\n    // {\r\n    //   a: {\r\n    //     id: \"a\",\r\n    //     top: 20,\r\n    //     left: 80,\r\n    //     content: \"Here is an Example to get you Started\",\r\n    //     linkList: new Set(\"b\"),\r\n    //   },\r\n    //   b: {\r\n    //     id: \"b\",\r\n    //     top: 180,\r\n    //     left: 20,\r\n    //     content: \"Great Idea!\",\r\n    //     linkList: new Set(),\r\n    //   },\r\n    // },\r\n    initialState\r\n  );\r\n\r\n  return {\r\n    ideas: ideas,\r\n    ideasDispatch: ideasDispatch,\r\n    selectedId: selectedId,\r\n    setSelectedId: setSelectedId,\r\n  };\r\n}\r\n\r\nexport const IdeaContext = React.createContext();\r\n"]},"metadata":{},"sourceType":"module"}