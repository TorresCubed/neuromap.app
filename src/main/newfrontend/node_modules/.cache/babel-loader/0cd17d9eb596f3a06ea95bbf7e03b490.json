{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport update from \"immutability-helper\";\nexport const useThemeManager = () => {\n  _s();\n\n  const [theme, setTheme] = useState({\n    freeFormIdeasColor: \"#008080\",\n    optionBarColor: \"#800080\",\n    selectedIdeaColor: \"#FFD700\"\n  });\n  const updateTheme = useCallback(action => {\n    setTheme(update(theme, {\n      [action.element]: {\n        $set: action.color\n      }\n    }));\n  }, [theme]);\n  return {\n    theme: theme,\n    updateTheme: updateTheme\n  };\n};\n\n_s(useThemeManager, \"pf11qT7GFSncufD/lXwdjjeYoWs=\");\n\nexport const ThemeContext = /*#__PURE__*/React.createContext();","map":{"version":3,"sources":["C:/Users/torre/Desktop/neuroMap.app/src/ThemeContext.js"],"names":["React","useCallback","useState","update","useThemeManager","theme","setTheme","freeFormIdeasColor","optionBarColor","selectedIdeaColor","updateTheme","action","element","$set","color","ThemeContext","createContext"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC;AACjCK,IAAAA,kBAAkB,EAAE,SADa;AAEjCC,IAAAA,cAAc,EAAE,SAFiB;AAGjCC,IAAAA,iBAAiB,EAAE;AAHc,GAAD,CAAlC;AAMA,QAAMC,WAAW,GAAGT,WAAW,CAC5BU,MAAD,IAAY;AACVL,IAAAA,QAAQ,CACNH,MAAM,CAACE,KAAD,EAAQ;AACZ,OAACM,MAAM,CAACC,OAAR,GAAkB;AAChBC,QAAAA,IAAI,EAAEF,MAAM,CAACG;AADG;AADN,KAAR,CADA,CAAR;AAOD,GAT4B,EAU7B,CAACT,KAAD,CAV6B,CAA/B;AAaA,SAAO;AAAEA,IAAAA,KAAK,EAAEA,KAAT;AAAgBK,IAAAA,WAAW,EAAEA;AAA7B,GAAP;AACD,CArBM;;GAAMN,e;;AAuBb,OAAO,MAAMW,YAAY,gBAAGf,KAAK,CAACgB,aAAN,EAArB","sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport update from \"immutability-helper\";\r\n\r\nexport const useThemeManager = () => {\r\n  const [theme, setTheme] = useState({\r\n    freeFormIdeasColor: \"#008080\",\r\n    optionBarColor: \"#800080\",\r\n    selectedIdeaColor: \"#FFD700\",\r\n  });\r\n\r\n  const updateTheme = useCallback(\r\n    (action) => {\r\n      setTheme(\r\n        update(theme, {\r\n          [action.element]: {\r\n            $set: action.color,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [theme]\r\n  );\r\n\r\n  return { theme: theme, updateTheme: updateTheme };\r\n};\r\n\r\nexport const ThemeContext = React.createContext();\r\n"]},"metadata":{},"sourceType":"module"}