{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from \"react\";\nimport update from \"immutability-helper\";\nimport axios from \"axios\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"update\":\n      axios.put(`http://localHost:9999/api/v1/ideas/${action.ideaId}`, action.data, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then();\n      return update(state, {\n        [action.ideaId]: {\n          $merge: action.data\n        }\n      });\n\n    case \"updateSize\":\n      return update(state, {\n        [action.ideaId]: {\n          $merge: action.data\n        }\n      });\n\n    case \"createIdea\":\n      axios.post(\"http://localHost:9999/api/v1/ideas\", Object.assign({\n        ideaId: action.ideaId,\n        linkList: []\n      }, action.data)).then();\n      return update(state, {\n        [action.ideaId]: {\n          $set: Object.assign({\n            ideaId: action.ideaId,\n            linkList: new Set()\n          }, action.data)\n        }\n      });\n\n    case \"createLink\":\n      axios.put(`http://localHost:9999/api/v1/ideas/${action.fromId}`, {\n        newLink: action.toId\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then();\n      return update(state, {\n        [action.fromId]: {\n          linkList: {\n            $add: [action.toId]\n          }\n        }\n      });\n\n    case \"deleteIdea\":\n      axios.delete(`http://localHost:9999/api/v1/ideas/${action.deleteId}`).then();\n      return update(state, {\n        $unset: [action.deleteId]\n      });\n\n    case \"deleteLink\":\n      axios.put(`http://localHost:9999/api/v1/ideas/${action.ideaId}`, {\n        removeLink: action.linkToRemove\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then();\n      return update(state, {\n        [action.ideaId]: {\n          linkList: {\n            $remove: [action.linkToRemove]\n          }\n        }\n      });\n\n    case \"initialIdeas\":\n      return update(state, {\n        $set: action.data\n      });\n\n    default:\n      throw new Error(`Unexpected action type: ${action.type}`);\n  }\n}\n\nexport function useIdeaManager() {\n  _s();\n\n  const [selectedId, setSelectedId] = useState(\"a\");\n  const [ideas, ideasDispatch] = useReducer(reducer, {});\n  useEffect(() => {\n    const ideasImport = {};\n    axios.get(\"http://localHost:9999/api/v1/ideas\").then(res => {\n      res.data.forEach(element => {\n        element.linkList = new Set(element.linkList.map(a => a.toId));\n        ideasImport[element.ideaId] = element;\n      });\n      ideasDispatch({\n        type: \"initialIdeas\",\n        data: ideasImport\n      });\n    });\n  }, []);\n  return {\n    ideas: ideas,\n    ideasDispatch: ideasDispatch,\n    selectedId: selectedId,\n    setSelectedId: setSelectedId\n  };\n}\n\n_s(useIdeaManager, \"Z0cV0aGZNHG/cy13ZIxAvJR5giA=\");\n\nexport const IdeaContext = /*#__PURE__*/React.createContext();","map":{"version":3,"sources":["C:/Users/torre/Documents/neuromap.app/src/main/frontend/src/IdeaContext.js"],"names":["React","useEffect","useReducer","useState","update","axios","reducer","state","action","type","put","ideaId","data","headers","then","$merge","post","Object","assign","linkList","$set","Set","fromId","newLink","toId","$add","delete","deleteId","$unset","removeLink","linkToRemove","$remove","Error","useIdeaManager","selectedId","setSelectedId","ideas","ideasDispatch","ideasImport","get","res","forEach","element","map","a","IdeaContext","createContext"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, useState } from \"react\";\r\nimport update from \"immutability-helper\";\r\nimport axios from \"axios\";\r\n\r\nfunction reducer(state, action) {\r\n      switch (action.type) {\r\n        case \"update\":\r\n          axios.put(`http://localHost:9999/api/v1/ideas/${action.ideaId}`, \r\n            action.data,          \r\n            {headers: {\"Content-Type\": \"application/json\"}}\r\n          ).then()\r\n          return update(state, {\r\n            [action.ideaId]: {\r\n              $merge: action.data,\r\n            },\r\n          });\r\n        case \"updateSize\":\r\n          return update(state, {\r\n            [action.ideaId]: {\r\n              $merge: action.data,\r\n            },\r\n          });\r\n        case \"createIdea\":\r\n          axios.post(\"http://localHost:9999/api/v1/ideas\", \r\n                    Object.assign({\r\n                      ideaId:action.ideaId,linkList: []}, action.data)\r\n          ).then()\r\n          return update(state, {\r\n            [action.ideaId]: {\r\n              $set: Object.assign(\r\n                { ideaId: action.ideaId, linkList: new Set() },\r\n                action.data\r\n              ),\r\n            },\r\n          });\r\n        case \"createLink\":\r\n          axios.put(`http://localHost:9999/api/v1/ideas/${action.fromId}`, \r\n            {newLink:action.toId},          \r\n            {headers: {\"Content-Type\": \"application/json\"}}\r\n          ).then()\r\n          return update(state, {\r\n            [action.fromId]: {\r\n              linkList: { $add: [action.toId] },\r\n            },\r\n          });\r\n        case \"deleteIdea\":\r\n          axios.delete(`http://localHost:9999/api/v1/ideas/${action.deleteId}`)\r\n          .then()\r\n          return update(state, \r\n            {$unset: [action.deleteId]}\r\n          )\r\n        case \"deleteLink\":\r\n          axios.put(`http://localHost:9999/api/v1/ideas/${action.ideaId}`, \r\n            {removeLink:action.linkToRemove},          \r\n            {headers: {\"Content-Type\": \"application/json\"}}\r\n          ).then()\r\n          return update(state, {\r\n            [action.ideaId]: {\r\n              linkList: \r\n                {$remove: [action.linkToRemove]}\r\n            }\r\n          });\r\n        case \"initialIdeas\":\r\n            return update(state, {\r\n              $set:action.data\r\n            });\r\n        default:\r\n          throw new Error(`Unexpected action type: ${action.type}`);\r\n      }\r\n    }\r\n\r\nexport function useIdeaManager() {\r\n  const [selectedId, setSelectedId] = useState(\"a\");\r\n\r\n  const [ideas, ideasDispatch] = useReducer(reducer, {});\r\n  \r\n  useEffect(() => {\r\n    const ideasImport = {};\r\n    axios.get(\"http://localHost:9999/api/v1/ideas\").then(\r\n      res =>{\r\n        res.data.forEach(element => {\r\n        element.linkList = new Set(element.linkList.map(a=>a.toId))\r\n        ideasImport[element.ideaId] = element;\r\n      });\r\n      \r\n        ideasDispatch({\r\n          type: \"initialIdeas\",\r\n          data: ideasImport\r\n        });\r\n      }\r\n    )\r\n    \r\n  }, [])\r\n\r\n  return {\r\n    ideas: ideas,\r\n    ideasDispatch: ideasDispatch,\r\n    selectedId: selectedId,\r\n    setSelectedId: setSelectedId,\r\n  };\r\n}\r\n\r\nexport const IdeaContext = React.createContext();\r\n"]},"metadata":{},"sourceType":"module"}