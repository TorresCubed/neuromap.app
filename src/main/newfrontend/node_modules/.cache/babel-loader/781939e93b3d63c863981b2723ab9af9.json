{"ast":null,"code":"import _defineProperty from\"C:/Users/torre/Documents/neuromap.app/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"C:/Users/torre/Documents/neuromap.app/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer,useState}from\"react\";import update from\"immutability-helper\";export function useIdeaManager(){var _useState=useState(\"a\"),_useState2=_slicedToArray(_useState,2),selectedId=_useState2[0],setSelectedId=_useState2[1];var _useReducer=useReducer(function(state,action){switch(action.type){case\"update\":return update(state,_defineProperty({},action.id,{$merge:action.data}));case\"create\":return update(state,_defineProperty({},action.id,{$set:Object.assign({id:action.id,linkList:new Set()},action.data)}));case\"link\":return update(state,_defineProperty({},action.fromId,{linkList:{$add:[action.toId]}}));default:throw new Error(\"Unexpected action type: \".concat(action.type));}},{a:{id:\"a\",top:20,left:80,title:\"Here is an Example to get you Started\",linkList:new Set(\"b\")},b:{id:\"b\",top:180,left:20,title:\"Great Idea!\",linkList:new Set()}}),_useReducer2=_slicedToArray(_useReducer,2),ideas=_useReducer2[0],ideasDispatch=_useReducer2[1];return{ideas:ideas,ideasDispatch:ideasDispatch,selectedId:selectedId,setSelectedId:setSelectedId};}export var IdeaContext=/*#__PURE__*/React.createContext();","map":{"version":3,"sources":["C:/Users/torre/Documents/neuromap.app/src/main/frontend/src/IdeaContext.js"],"names":["React","useReducer","useState","update","useIdeaManager","selectedId","setSelectedId","state","action","type","id","$merge","data","$set","Object","assign","linkList","Set","fromId","$add","toId","Error","a","top","left","title","b","ideas","ideasDispatch","IdeaContext","createContext"],"mappings":"8VAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CAEA,MAAO,SAASC,CAAAA,cAAT,EAA0B,eACKF,QAAQ,CAAC,GAAD,CADb,wCACxBG,UADwB,eACZC,aADY,+BAGAL,UAAU,CACvC,SAACM,KAAD,CAAQC,MAAR,CAAmB,CACjB,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,QAAL,CACE,MAAON,CAAAA,MAAM,CAACI,KAAD,oBACVC,MAAM,CAACE,EADG,CACE,CACXC,MAAM,CAAEH,MAAM,CAACI,IADJ,CADF,EAAb,CAKF,IAAK,QAAL,CACE,MAAOT,CAAAA,MAAM,CAACI,KAAD,oBACVC,MAAM,CAACE,EADG,CACE,CACXG,IAAI,CAAEC,MAAM,CAACC,MAAP,CACJ,CAAEL,EAAE,CAAEF,MAAM,CAACE,EAAb,CAAiBM,QAAQ,CAAE,GAAIC,CAAAA,GAAJ,EAA3B,CADI,CAEJT,MAAM,CAACI,IAFH,CADK,CADF,EAAb,CAQF,IAAK,MAAL,CACE,MAAOT,CAAAA,MAAM,CAACI,KAAD,oBACVC,MAAM,CAACU,MADG,CACM,CACfF,QAAQ,CAAE,CAAEG,IAAI,CAAE,CAACX,MAAM,CAACY,IAAR,CAAR,CADK,CADN,EAAb,CAKF,QACE,KAAM,IAAIC,CAAAA,KAAJ,mCAAqCb,MAAM,CAACC,IAA5C,EAAN,CAvBJ,CAyBD,CA3BsC,CA4BvC,CACEa,CAAC,CAAE,CACDZ,EAAE,CAAE,GADH,CAEDa,GAAG,CAAE,EAFJ,CAGDC,IAAI,CAAE,EAHL,CAIDC,KAAK,CAAE,uCAJN,CAKDT,QAAQ,CAAE,GAAIC,CAAAA,GAAJ,CAAQ,GAAR,CALT,CADL,CAQES,CAAC,CAAE,CACDhB,EAAE,CAAE,GADH,CAEDa,GAAG,CAAE,GAFJ,CAGDC,IAAI,CAAE,EAHL,CAIDC,KAAK,CAAE,aAJN,CAKDT,QAAQ,CAAE,GAAIC,CAAAA,GAAJ,EALT,CARL,CA5BuC,CAHV,4CAGxBU,KAHwB,iBAGjBC,aAHiB,iBAiD/B,MAAO,CACLD,KAAK,CAAEA,KADF,CAELC,aAAa,CAAEA,aAFV,CAGLvB,UAAU,CAAEA,UAHP,CAILC,aAAa,CAAEA,aAJV,CAAP,CAMD,CAED,MAAO,IAAMuB,CAAAA,WAAW,cAAG7B,KAAK,CAAC8B,aAAN,EAApB","sourcesContent":["import React, { useReducer, useState } from \"react\";\r\nimport update from \"immutability-helper\";\r\n\r\nexport function useIdeaManager() {\r\n  const [selectedId, setSelectedId] = useState(\"a\");\r\n\r\n  const [ideas, ideasDispatch] = useReducer(\r\n    (state, action) => {\r\n      switch (action.type) {\r\n        case \"update\":\r\n          return update(state, {\r\n            [action.id]: {\r\n              $merge: action.data,\r\n            },\r\n          });\r\n        case \"create\":\r\n          return update(state, {\r\n            [action.id]: {\r\n              $set: Object.assign(\r\n                { id: action.id, linkList: new Set() },\r\n                action.data\r\n              ),\r\n            },\r\n          });\r\n        case \"link\":\r\n          return update(state, {\r\n            [action.fromId]: {\r\n              linkList: { $add: [action.toId] },\r\n            },\r\n          });\r\n        default:\r\n          throw new Error(`Unexpected action type: ${action.type}`);\r\n      }\r\n    },\r\n    {\r\n      a: {\r\n        id: \"a\",\r\n        top: 20,\r\n        left: 80,\r\n        title: \"Here is an Example to get you Started\",\r\n        linkList: new Set(\"b\"),\r\n      },\r\n      b: {\r\n        id: \"b\",\r\n        top: 180,\r\n        left: 20,\r\n        title: \"Great Idea!\",\r\n        linkList: new Set(),\r\n      },\r\n    }\r\n  );\r\n\r\n  return {\r\n    ideas: ideas,\r\n    ideasDispatch: ideasDispatch,\r\n    selectedId: selectedId,\r\n    setSelectedId: setSelectedId,\r\n  };\r\n}\r\n\r\nexport const IdeaContext = React.createContext();\r\n"]},"metadata":{},"sourceType":"module"}