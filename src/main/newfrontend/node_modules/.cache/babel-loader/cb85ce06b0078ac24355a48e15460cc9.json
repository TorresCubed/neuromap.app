{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\torre\\\\Documents\\\\neuromap.app\\\\src\\\\main\\\\frontend\\\\src\\\\IdeaForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport update from \"immutability-helper\";\nimport \"./IdeaForm.css\";\n\nconst IdeaForm = ({\n  onSubmit,\n  idea\n}) => {\n  _s();\n\n  const [ideaState, setIdeaState] = useState(idea || {\n    content: \"\"\n  });\n\n  if (ideaState.id !== (idea === null || idea === void 0 ? void 0 : idea.id)) {\n    setIdeaState(idea || {\n      content: \"\"\n    });\n  }\n\n  const handleChange = useCallback(event => setIdeaState(update(ideaState, {\n    content: {\n      $set: event.target.value\n    }\n  })), [ideaState]);\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n    onSubmit(ideaState);\n    setIdeaState({\n      content: \"\"\n    });\n  }, [onSubmit, ideaState]);\n  const entries = {\n    addForm: {\n      header: \"Add an Idea\",\n      label: \"Enter Idea:\",\n      button: \"Add\"\n    },\n    editForm: {\n      header: \"Enter Idea Change\",\n      label: \"Change Idea:\",\n      button: \"Change\"\n    }\n  };\n  const formType = ideaState.id ? \"editForm\" : \"addForm\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: entries[formType].header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: entries[formType].label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: ideaState.content,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"submitButton\",\n          type: \"submit\",\n          value: entries[formType].button\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IdeaForm, \"I1wva1e//dKEedecBZWdihMqZZ0=\");\n\n_c = IdeaForm;\nexport default IdeaForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"IdeaForm\");","map":{"version":3,"sources":["C:/Users/torre/Documents/neuromap.app/src/main/frontend/src/IdeaForm.js"],"names":["React","useCallback","useState","update","IdeaForm","onSubmit","idea","ideaState","setIdeaState","content","id","handleChange","event","$set","target","value","handleSubmit","e","preventDefault","entries","addForm","header","label","button","editForm","formType"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,gBAAP;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AAAA;;AACvC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAACI,IAAI,IAAI;AAAEG,IAAAA,OAAO,EAAE;AAAX,GAAT,CAA1C;;AAEA,MAAIF,SAAS,CAACG,EAAV,MAAiBJ,IAAjB,aAAiBA,IAAjB,uBAAiBA,IAAI,CAAEI,EAAvB,CAAJ,EAA+B;AAC7BF,IAAAA,YAAY,CAACF,IAAI,IAAI;AAAEG,MAAAA,OAAO,EAAE;AAAX,KAAT,CAAZ;AACD;;AAED,QAAME,YAAY,GAAGV,WAAW,CAC7BW,KAAD,IACEJ,YAAY,CAACL,MAAM,CAACI,SAAD,EAAY;AAAEE,IAAAA,OAAO,EAAE;AAAEI,MAAAA,IAAI,EAAED,KAAK,CAACE,MAAN,CAAaC;AAArB;AAAX,GAAZ,CAAP,CAFgB,EAG9B,CAACR,SAAD,CAH8B,CAAhC;AAMA,QAAMS,YAAY,GAAGf,WAAW,CAC7BgB,CAAD,IAAO;AACLA,IAAAA,CAAC,CAACC,cAAF;AACAb,IAAAA,QAAQ,CAACE,SAAD,CAAR;AACAC,IAAAA,YAAY,CAAC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAZ;AACD,GAL6B,EAM9B,CAACJ,QAAD,EAAWE,SAAX,CAN8B,CAAhC;AASA,QAAMY,OAAO,GAAG;AACdC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,aADD;AAEPC,MAAAA,KAAK,EAAE,aAFA;AAGPC,MAAAA,MAAM,EAAE;AAHD,KADK;AAMdC,IAAAA,QAAQ,EAAE;AACRH,MAAAA,MAAM,EAAE,mBADA;AAERC,MAAAA,KAAK,EAAE,cAFC;AAGRC,MAAAA,MAAM,EAAE;AAHA;AANI,GAAhB;AAaA,QAAME,QAAQ,GAAGlB,SAAS,CAACG,EAAV,GAAe,UAAf,GAA4B,SAA7C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA,gBAAKS,OAAO,CAACM,QAAD,CAAP,CAAkBJ;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEL,YAAhB;AAAA,8BACE;AAAA,+BACE;AAAA,oBAAQG,OAAO,CAACM,QAAD,CAAP,CAAkBH;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,+BACE;AAAU,UAAA,KAAK,EAAEf,SAAS,CAACE,OAA3B;AAAoC,UAAA,QAAQ,EAAEE;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,KAAK,EAAEQ,OAAO,CAACM,QAAD,CAAP,CAAkBF;AAH3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAzDD;;GAAMnB,Q;;KAAAA,Q;AA2DN,eAAeA,QAAf","sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport update from \"immutability-helper\";\r\nimport \"./IdeaForm.css\";\r\n\r\nconst IdeaForm = ({ onSubmit, idea }) => {\r\n  const [ideaState, setIdeaState] = useState(idea || { content: \"\" });\r\n\r\n  if (ideaState.id !== idea?.id) {\r\n    setIdeaState(idea || { content: \"\" });\r\n  }\r\n\r\n  const handleChange = useCallback(\r\n    (event) =>\r\n      setIdeaState(update(ideaState, { content: { $set: event.target.value } })),\r\n    [ideaState]\r\n  );\r\n\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      onSubmit(ideaState);\r\n      setIdeaState({ content: \"\" });\r\n    },\r\n    [onSubmit, ideaState]\r\n  );\r\n\r\n  const entries = {\r\n    addForm: {\r\n      header: \"Add an Idea\",\r\n      label: \"Enter Idea:\",\r\n      button: \"Add\",\r\n    },\r\n    editForm: {\r\n      header: \"Enter Idea Change\",\r\n      label: \"Change Idea:\",\r\n      button: \"Change\",\r\n    },\r\n  };\r\n\r\n  const formType = ideaState.id ? \"editForm\" : \"addForm\";\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <h1>{entries[formType].header}</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>{entries[formType].label}</label>\r\n        </div>\r\n        <div>\r\n          <textarea value={ideaState.content} onChange={handleChange} />\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"submitButton\"\r\n            type=\"submit\"\r\n            value={entries[formType].button}\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IdeaForm;\r\n"]},"metadata":{},"sourceType":"module"}