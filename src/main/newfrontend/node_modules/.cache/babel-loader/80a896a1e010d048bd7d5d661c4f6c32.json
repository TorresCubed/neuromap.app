{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\torre\\\\Documents\\\\neuromap.app\\\\src\\\\main\\\\frontend\\\\src\\\\OptionBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useContext, useState } from \"react\";\nimport IdeaForm from \"./IdeaForm\";\nimport { ThemeContext } from \"./ThemeContext\";\nimport { IdeaContext } from \"./IdeaContext\";\nimport update from \"immutability-helper\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./OptionBar.css\";\nimport { SketchPicker } from \"react-color\";\n\nconst OptionBar = () => {\n  _s();\n\n  const {\n    ideas,\n    selectedId,\n    setSelectedId,\n    ideasDispatch\n  } = useContext(IdeaContext);\n  const selectedIdea = ideas[selectedId];\n  const {\n    theme,\n    updateTheme\n  } = useContext(ThemeContext);\n  const [colorSelectorValue, setColorSelectorValue] = useState(0);\n  const [background, setBackground] = useState(\"#800080\");\n  const [showColorPalet, setShowColorPalet] = useState(false);\n  const changeColor = useCallback(color => {\n    setBackground(color.hex);\n    updateTheme({\n      element: {\n        1: \"optionBarColor\",\n        2: \"freeFormIdeasColor\",\n        3: \"selectedIdeaColor\"\n      }[colorSelectorValue],\n      color: color.hex\n    });\n  }, [colorSelectorValue, updateTheme]);\n  const handleThemeSelection = useCallback(event => {\n    setColorSelectorValue(event.target.value);\n\n    if (event.target.value === \"0\") {\n      setShowColorPalet(false);\n      return;\n    }\n\n    setShowColorPalet(true);\n  }, []);\n  const [showIdeaChangeForm, setShowIdeaChangeForm] = useState(false);\n  const toggleFormType = useCallback(() => {\n    setShowIdeaChangeForm(!showIdeaChangeForm);\n  }, [showIdeaChangeForm]);\n  const handleIdeaChange = useCallback(idea => {\n    if (idea.title === \"\") return;\n\n    if (!idea.id) {\n      const newID = uuidv4();\n      ideasDispatch({\n        type: \"create\",\n        id: newID,\n        data: update(idea, {\n          $merge: {\n            top: 100,\n            left: 100\n          }\n        })\n      });\n      setSelectedId(newID);\n      setShowIdeaChangeForm(false);\n      return;\n    }\n\n    toggleFormType();\n    ideasDispatch({\n      type: \"update\",\n      id: selectedId,\n      data: idea\n    });\n  }, [toggleFormType, selectedId, ideasDispatch, setSelectedId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"OptionBar\",\n    style: {\n      background: theme.optionBarColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selector\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          margin: \"5px\"\n        },\n        onClick: toggleFormType,\n        children: \"Edit Selected Idea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(IdeaForm, {\n        onSubmit: handleIdeaChange,\n        idea: showIdeaChangeForm ? selectedIdea : {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Select what you'd like to customize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        style: {\n          margin: \"5px\"\n        },\n        onChange: handleThemeSelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"0\",\n          children: \"None\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"Option Bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"Idea Canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"Selection Outline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), showColorPalet && /*#__PURE__*/_jsxDEV(SketchPicker, {\n      onChange: changeColor,\n      color: background\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OptionBar, \"5hf6Ftle2pYH/ADvAFJgWvaqP10=\");\n\n_c = OptionBar;\nexport default OptionBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionBar\");","map":{"version":3,"sources":["C:/Users/torre/Documents/neuromap.app/src/main/frontend/src/OptionBar.js"],"names":["React","useCallback","useContext","useState","IdeaForm","ThemeContext","IdeaContext","update","v4","uuidv4","SketchPicker","OptionBar","ideas","selectedId","setSelectedId","ideasDispatch","selectedIdea","theme","updateTheme","colorSelectorValue","setColorSelectorValue","background","setBackground","showColorPalet","setShowColorPalet","changeColor","color","hex","element","handleThemeSelection","event","target","value","showIdeaChangeForm","setShowIdeaChangeForm","toggleFormType","handleIdeaChange","idea","title","id","newID","type","data","$merge","top","left","optionBarColor","margin"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useState } from \"react\";\r\nimport IdeaForm from \"./IdeaForm\";\r\nimport { ThemeContext } from \"./ThemeContext\";\r\nimport { IdeaContext } from \"./IdeaContext\";\r\nimport update from \"immutability-helper\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./OptionBar.css\";\r\nimport { SketchPicker } from \"react-color\";\r\n\r\nconst OptionBar = () => {\r\n  const { ideas, selectedId, setSelectedId, ideasDispatch } = useContext(\r\n    IdeaContext\r\n  );\r\n  const selectedIdea = ideas[selectedId];\r\n\r\n  const { theme, updateTheme } = useContext(ThemeContext);\r\n  const [colorSelectorValue, setColorSelectorValue] = useState(0);\r\n  const [background, setBackground] = useState(\"#800080\");\r\n  const [showColorPalet, setShowColorPalet] = useState(false);\r\n\r\n  const changeColor = useCallback(\r\n    (color) => {\r\n      setBackground(color.hex);\r\n      updateTheme({\r\n        element: {\r\n          1: \"optionBarColor\",\r\n          2: \"freeFormIdeasColor\",\r\n          3: \"selectedIdeaColor\",\r\n        }[colorSelectorValue],\r\n        color: color.hex,\r\n      });\r\n    },\r\n    [colorSelectorValue, updateTheme]\r\n  );\r\n\r\n  const handleThemeSelection = useCallback((event) => {\r\n    setColorSelectorValue(event.target.value);\r\n    if (event.target.value === \"0\") {\r\n      setShowColorPalet(false);\r\n      return;\r\n    }\r\n    setShowColorPalet(true);\r\n  }, []);\r\n\r\n  const [showIdeaChangeForm, setShowIdeaChangeForm] = useState(false);\r\n  const toggleFormType = useCallback(() => {\r\n    setShowIdeaChangeForm(!showIdeaChangeForm);\r\n  }, [showIdeaChangeForm]);\r\n\r\n  const handleIdeaChange = useCallback(\r\n    (idea) => {\r\n      if (idea.title === \"\") return;\r\n      if (!idea.id) {\r\n        const newID = uuidv4();\r\n        ideasDispatch({\r\n          type: \"create\",\r\n          id: newID,\r\n          data: update(idea, { $merge: { top: 100, left: 100 } }),\r\n        });\r\n        setSelectedId(newID);\r\n        setShowIdeaChangeForm(false);\r\n        return;\r\n      }\r\n      toggleFormType();\r\n      ideasDispatch({ type: \"update\", id: selectedId, data: idea });\r\n    },\r\n    [toggleFormType, selectedId, ideasDispatch, setSelectedId]\r\n  );\r\n\r\n  return (\r\n    <div className=\"OptionBar\" style={{ background: theme.optionBarColor }}>\r\n      <div className=\"selector\">\r\n        <button style={{ margin: \"5px\" }} onClick={toggleFormType}>\r\n          Edit Selected Idea\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <IdeaForm\r\n          onSubmit={handleIdeaChange}\r\n          idea={showIdeaChangeForm ? selectedIdea : {}}\r\n        />\r\n      </div>\r\n      <div className=\"selector\">\r\n        <div>Select what you'd like to customize</div>\r\n        <select style={{ margin: \"5px\" }} onChange={handleThemeSelection}>\r\n          <option value=\"0\">None</option>\r\n          <option value=\"1\">Option Bar</option>\r\n          <option value=\"2\">Idea Canvas</option>\r\n          <option value=\"3\">Selection Outline</option>\r\n        </select>\r\n      </div>\r\n      {showColorPalet && (\r\n        <SketchPicker onChange={changeColor} color={background} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionBar;\r\n"]},"metadata":{},"sourceType":"module"}