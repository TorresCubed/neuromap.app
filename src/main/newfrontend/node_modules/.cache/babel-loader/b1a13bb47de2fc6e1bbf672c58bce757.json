{"ast":null,"code":"import _defineProperty from\"C:/Users/torre/Desktop/neuroMap.app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"C:/Users/torre/Desktop/neuroMap.app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useState}from\"react\";import update from\"immutability-helper\";export var useThemeManager=function useThemeManager(){var _useState=useState({freeFormIdeasColor:\"#008080\",optionBarColor:\"#800080\",selectedIdeaColor:\"#FFD700\"}),_useState2=_slicedToArray(_useState,2),theme=_useState2[0],setTheme=_useState2[1];var updateTheme=useCallback(function(action){setTheme(update(theme,_defineProperty({},action.element,{$set:action.color})));},[theme]);return{theme:theme,updateTheme:updateTheme};};export var ThemeContext=/*#__PURE__*/React.createContext();","map":{"version":3,"sources":["C:/Users/torre/Desktop/neuroMap.app/src/ThemeContext.js"],"names":["React","useCallback","useState","update","useThemeManager","freeFormIdeasColor","optionBarColor","selectedIdeaColor","theme","setTheme","updateTheme","action","element","$set","color","ThemeContext","createContext"],"mappings":"sTAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,QAA7B,KAA6C,OAA7C,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,eACTF,QAAQ,CAAC,CACjCG,kBAAkB,CAAE,SADa,CAEjCC,cAAc,CAAE,SAFiB,CAGjCC,iBAAiB,CAAE,SAHc,CAAD,CADC,wCAC5BC,KAD4B,eACrBC,QADqB,eAOnC,GAAMC,CAAAA,WAAW,CAAGT,WAAW,CAC7B,SAACU,MAAD,CAAY,CACVF,QAAQ,CACNN,MAAM,CAACK,KAAD,oBACHG,MAAM,CAACC,OADJ,CACc,CAChBC,IAAI,CAAEF,MAAM,CAACG,KADG,CADd,EADA,CAAR,CAOD,CAT4B,CAU7B,CAACN,KAAD,CAV6B,CAA/B,CAaA,MAAO,CAAEA,KAAK,CAAEA,KAAT,CAAgBE,WAAW,CAAEA,WAA7B,CAAP,CACD,CArBM,CAuBP,MAAO,IAAMK,CAAAA,YAAY,cAAGf,KAAK,CAACgB,aAAN,EAArB","sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport update from \"immutability-helper\";\r\n\r\nexport const useThemeManager = () => {\r\n  const [theme, setTheme] = useState({\r\n    freeFormIdeasColor: \"#008080\",\r\n    optionBarColor: \"#800080\",\r\n    selectedIdeaColor: \"#FFD700\",\r\n  });\r\n\r\n  const updateTheme = useCallback(\r\n    (action) => {\r\n      setTheme(\r\n        update(theme, {\r\n          [action.element]: {\r\n            $set: action.color,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [theme]\r\n  );\r\n\r\n  return { theme: theme, updateTheme: updateTheme };\r\n};\r\n\r\nexport const ThemeContext = React.createContext();\r\n"]},"metadata":{},"sourceType":"module"}