{"ast":null,"code":"import _slicedToArray from\"C:/Users/torre/Documents/neuromap.app/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useCallback,useState}from\"react\";import update from\"immutability-helper\";import\"./IdeaForm.css\";var IdeaForm=function IdeaForm(_ref){var onSubmit=_ref.onSubmit,idea=_ref.idea;var _useState=useState(idea||{title:\"\"}),_useState2=_slicedToArray(_useState,2),ideaState=_useState2[0],setIdeaState=_useState2[1];if(ideaState.id!==(idea===null||idea===void 0?void 0:idea.id)){setIdeaState(idea||{title:\"\"});}var handleChange=useCallback(function(event){return setIdeaState(update(ideaState,{title:{$set:event.target.value}}));},[ideaState]);var handleSubmit=useCallback(function(e){e.preventDefault();onSubmit(ideaState);setIdeaState({title:\"\"});},[onSubmit,ideaState]);var entries={addForm:{header:\"Add an Idea\",label:\"Enter Idea:\",button:\"Add\"},editForm:{header:\"Enter Idea Change\",label:\"Change Idea:\",button:\"Change\"}};var formType=ideaState.id?\"editForm\":\"addForm\";return/*#__PURE__*/_jsxs(\"div\",{className:\"form\",children:[/*#__PURE__*/_jsx(\"h1\",{children:entries[formType].header}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"label\",{children:entries[formType].label})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"textarea\",{value:ideaState.title,onChange:handleChange})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{className:\"submitButton\",type:\"submit\",value:entries[formType].button})})]})]});};export default IdeaForm;","map":{"version":3,"sources":["C:/Users/torre/Documents/neuromap.app/src/main/frontend/src/IdeaForm.js"],"names":["React","useCallback","useState","update","IdeaForm","onSubmit","idea","title","ideaState","setIdeaState","id","handleChange","event","$set","target","value","handleSubmit","e","preventDefault","entries","addForm","header","label","button","editForm","formType"],"mappings":"sQAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,QAA7B,KAA6C,OAA7C,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAO,gBAAP,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAwB,IAArBC,CAAAA,QAAqB,MAArBA,QAAqB,CAAXC,IAAW,MAAXA,IAAW,eACLJ,QAAQ,CAACI,IAAI,EAAI,CAAEC,KAAK,CAAE,EAAT,CAAT,CADH,wCAChCC,SADgC,eACrBC,YADqB,eAGvC,GAAID,SAAS,CAACE,EAAV,IAAiBJ,IAAjB,SAAiBA,IAAjB,iBAAiBA,IAAI,CAAEI,EAAvB,CAAJ,CAA+B,CAC7BD,YAAY,CAACH,IAAI,EAAI,CAAEC,KAAK,CAAE,EAAT,CAAT,CAAZ,CACD,CAED,GAAMI,CAAAA,YAAY,CAAGV,WAAW,CAC9B,SAACW,KAAD,QACEH,CAAAA,YAAY,CAACN,MAAM,CAACK,SAAD,CAAY,CAAED,KAAK,CAAE,CAAEM,IAAI,CAAED,KAAK,CAACE,MAAN,CAAaC,KAArB,CAAT,CAAZ,CAAP,CADd,EAD8B,CAG9B,CAACP,SAAD,CAH8B,CAAhC,CAMA,GAAMQ,CAAAA,YAAY,CAAGf,WAAW,CAC9B,SAACgB,CAAD,CAAO,CACLA,CAAC,CAACC,cAAF,GACAb,QAAQ,CAACG,SAAD,CAAR,CACAC,YAAY,CAAC,CAAEF,KAAK,CAAE,EAAT,CAAD,CAAZ,CACD,CAL6B,CAM9B,CAACF,QAAD,CAAWG,SAAX,CAN8B,CAAhC,CASA,GAAMW,CAAAA,OAAO,CAAG,CACdC,OAAO,CAAE,CACPC,MAAM,CAAE,aADD,CAEPC,KAAK,CAAE,aAFA,CAGPC,MAAM,CAAE,KAHD,CADK,CAMdC,QAAQ,CAAE,CACRH,MAAM,CAAE,mBADA,CAERC,KAAK,CAAE,cAFC,CAGRC,MAAM,CAAE,QAHA,CANI,CAAhB,CAaA,GAAME,CAAAA,QAAQ,CAAGjB,SAAS,CAACE,EAAV,CAAe,UAAf,CAA4B,SAA7C,CAEA,mBACE,aAAK,SAAS,CAAC,MAAf,wBACE,oBAAKS,OAAO,CAACM,QAAD,CAAP,CAAkBJ,MAAvB,EADF,cAEE,cAAM,QAAQ,CAAEL,YAAhB,wBACE,kCACE,uBAAQG,OAAO,CAACM,QAAD,CAAP,CAAkBH,KAA1B,EADF,EADF,cAIE,kCACE,iBAAU,KAAK,CAAEd,SAAS,CAACD,KAA3B,CAAkC,QAAQ,CAAEI,YAA5C,EADF,EAJF,cAOE,kCACE,cACE,SAAS,CAAC,cADZ,CAEE,IAAI,CAAC,QAFP,CAGE,KAAK,CAAEQ,OAAO,CAACM,QAAD,CAAP,CAAkBF,MAH3B,EADF,EAPF,GAFF,GADF,CAoBD,CAzDD,CA2DA,cAAenB,CAAAA,QAAf","sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport update from \"immutability-helper\";\r\nimport \"./IdeaForm.css\";\r\n\r\nconst IdeaForm = ({ onSubmit, idea }) => {\r\n  const [ideaState, setIdeaState] = useState(idea || { title: \"\" });\r\n\r\n  if (ideaState.id !== idea?.id) {\r\n    setIdeaState(idea || { title: \"\" });\r\n  }\r\n\r\n  const handleChange = useCallback(\r\n    (event) =>\r\n      setIdeaState(update(ideaState, { title: { $set: event.target.value } })),\r\n    [ideaState]\r\n  );\r\n\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      onSubmit(ideaState);\r\n      setIdeaState({ title: \"\" });\r\n    },\r\n    [onSubmit, ideaState]\r\n  );\r\n\r\n  const entries = {\r\n    addForm: {\r\n      header: \"Add an Idea\",\r\n      label: \"Enter Idea:\",\r\n      button: \"Add\",\r\n    },\r\n    editForm: {\r\n      header: \"Enter Idea Change\",\r\n      label: \"Change Idea:\",\r\n      button: \"Change\",\r\n    },\r\n  };\r\n\r\n  const formType = ideaState.id ? \"editForm\" : \"addForm\";\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <h1>{entries[formType].header}</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>{entries[formType].label}</label>\r\n        </div>\r\n        <div>\r\n          <textarea value={ideaState.title} onChange={handleChange} />\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"submitButton\"\r\n            type=\"submit\"\r\n            value={entries[formType].button}\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IdeaForm;\r\n"]},"metadata":{},"sourceType":"module"}