{"version":3,"sources":["IdeaContext.js","ThemeContext.js","ItemTypes.js","linkerIcon.JPG","Idea.js","Modal.js","IdeaForm.js","Arrow.js","FreeformIdeas.js","OptionBar.js","Window.js","App.js","reportWebVitals.js","index.js"],"names":["IdeaContext","React","createContext","ThemeContext","ItemTypes","Idea","id","left","top","title","linkList","onEdit","selected","onSelect","onLinkStart","onLinkEnd","theme","useContext","ideasDispatch","domElement","useRef","useLayoutEffect","type","data","width","current","offsetWidth","height","offsetHeight","useDrag","item","drag","domElementRef","useCallback","domElementReference","handleSelect","handleDoubleClick","e","preventDefault","linkInitiation","linkerDesignation","selectedStyle","border","selectedIdeaColor","boxShadow","zIndex","ref","style","onDoubleClick","className","onMouseUp","onClick","src","linker","alt","onMouseDown","Modal","onClose","children","IdeaForm","onSubmit","idea","useState","ideaState","setIdeaState","handleChange","event","update","$set","target","value","handleSubmit","entries","addForm","header","label","button","editForm","formType","onChange","Arrow","start","end","arrowHeight","arrowWidth","arrowLength","Math","sqrt","arrowRotation","PI","atan2","lineInfo","transform","calcCoords","ideaTop","ideaLeft","posArrowRotation","abs","referenceAngleOne","tan","isOnRight","map","round","FreeFormIdeas","ideas","selectedId","setSelectedId","selectedIdea","coords","setCoords","showIdeaModal","setShowIdeaModal","ideaModalShow","ideaModalHide","linkerEnd","setLinkerEnd","linkingState","setLinkingState","linkBreak","canvasOffset","setcanvasOffset","updateCanvasOffset","getBoundingClientRect","y","handleLinkStart","clientY","clientX","adjustLinker","handleLinkEnd","fromId","toId","useDrop","accept","drop","monitor","delta","getDifferenceFromInitialOffset","x","editIdea","uuidv4","setTimeout","handleIdeaChange","$merge","useEffect","window","addEventListener","removeEventListener","background","freeFormIdeasColor","onMouseMove","Object","key","Array","from","endId","arrowRotationStart","arrowRotationEnd","sign","OptionBar","updateTheme","colorSelectorValue","setColorSelectorValue","setBackground","showColorPalet","setShowColorPalet","changeColor","color","hex","element","1","2","3","handleThemeSelection","showIdeaChangeForm","setShowIdeaChangeForm","toggleFormType","newID","optionBarColor","margin","Window","ideaContext","useReducer","state","action","assign","Set","$add","Error","a","b","useIdeaManager","themeContext","setTheme","useThemeManager","Provider","App","DndProvider","backend","HTML5Backend","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d4f448e.chunk.js","sourcesContent":["import React, { useReducer, useState } from \"react\";\r\nimport update from \"immutability-helper\";\r\n\r\nexport function useIdeaManager() {\r\n  const [selectedId, setSelectedId] = useState(\"a\");\r\n\r\n  const [ideas, ideasDispatch] = useReducer(\r\n    (state, action) => {\r\n      switch (action.type) {\r\n        case \"update\":\r\n          return update(state, {\r\n            [action.id]: {\r\n              $merge: action.data,\r\n            },\r\n          });\r\n        case \"create\":\r\n          return update(state, {\r\n            [action.id]: {\r\n              $set: Object.assign(\r\n                { id: action.id, linkList: new Set() },\r\n                action.data\r\n              ),\r\n            },\r\n          });\r\n        case \"link\":\r\n          return update(state, {\r\n            [action.fromId]: {\r\n              linkList: { $add: [action.toId] },\r\n            },\r\n          });\r\n        default:\r\n          throw new Error(`Unexpected action type: ${action.type}`);\r\n      }\r\n    },\r\n    {\r\n      a: {\r\n        id: \"a\",\r\n        top: 20,\r\n        left: 80,\r\n        title: \"Here is an Example to get you Started\",\r\n        linkList: new Set(\"b\"),\r\n      },\r\n      b: {\r\n        id: \"b\",\r\n        top: 180,\r\n        left: 20,\r\n        title: \"Great Idea!\",\r\n        linkList: new Set(),\r\n      },\r\n    }\r\n  );\r\n\r\n  return {\r\n    ideas: ideas,\r\n    ideasDispatch: ideasDispatch,\r\n    selectedId: selectedId,\r\n    setSelectedId: setSelectedId,\r\n  };\r\n}\r\n\r\nexport const IdeaContext = React.createContext();\r\n","import React, { useCallback, useState } from \"react\";\r\nimport update from \"immutability-helper\";\r\n\r\nexport const useThemeManager = () => {\r\n  const [theme, setTheme] = useState({\r\n    freeFormIdeasColor: \"#008080\",\r\n    optionBarColor: \"#800080\",\r\n    selectedIdeaColor: \"#FFD700\",\r\n  });\r\n\r\n  const updateTheme = useCallback(\r\n    (action) => {\r\n      setTheme(\r\n        update(theme, {\r\n          [action.element]: {\r\n            $set: action.color,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [theme]\r\n  );\r\n\r\n  return { theme: theme, updateTheme: updateTheme };\r\n};\r\n\r\nexport const ThemeContext = React.createContext();\r\n","export const ItemTypes = {\r\n  IDEA: \"idea\",\r\n};\r\n","export default __webpack_public_path__ + \"static/media/linkerIcon.1687f5ed.JPG\";","import React, { useCallback, useLayoutEffect, useContext, useRef } from \"react\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\nimport linker from \"./linkerIcon.JPG\";\r\nimport { IdeaContext } from \"./IdeaContext\";\r\nimport { ThemeContext } from \"./ThemeContext\";\r\nimport \"./Idea.css\";\r\n\r\nexport const Idea = ({\r\n  id,\r\n  left,\r\n  top,\r\n  title,\r\n  linkList,\r\n  onEdit,\r\n  selected,\r\n  onSelect,\r\n  onLinkStart,\r\n  onLinkEnd,\r\n}) => {\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const { ideasDispatch } = useContext(IdeaContext);\r\n\r\n  const domElement = useRef();\r\n  useLayoutEffect(() => {\r\n    ideasDispatch({\r\n      type: \"update\",\r\n      id,\r\n      data: {\r\n        width: domElement.current?.offsetWidth,\r\n        height: domElement.current?.offsetHeight,\r\n      },\r\n    });\r\n  });\r\n\r\n  const [, drag] = useDrag({\r\n    item: { id, left, top, title, linkList, type: ItemTypes.IDEA },\r\n  });\r\n\r\n  const domElementRef = useCallback(\r\n    (domElementReference) => {\r\n      domElement.current = domElementReference;\r\n      drag(domElementReference);\r\n    },\r\n    [drag]\r\n  );\r\n\r\n  const handleSelect = useCallback(() => onSelect(id), [onSelect, id]);\r\n\r\n  const handleDoubleClick = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      onEdit(id, title);\r\n    },\r\n    [onEdit, id, title]\r\n  );\r\n\r\n  const linkInitiation = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      onLinkStart(e);\r\n    },\r\n    [onLinkStart]\r\n  );\r\n\r\n  const linkerDesignation = useCallback(() => {\r\n    onLinkEnd(id);\r\n  }, [onLinkEnd, id]);\r\n\r\n  let selectedStyle = selected\r\n    ? {\r\n        border: `2px solid ${theme.selectedIdeaColor}`,\r\n        boxShadow: `4px 4px 15px ${theme.selectedIdeaColor}`,\r\n        zIndex: \"2\",\r\n      }\r\n    : {};\r\n\r\n  return (\r\n    <div\r\n      ref={domElementRef}\r\n      style={{ left, top, ...selectedStyle }}\r\n      onDoubleClick={handleDoubleClick}\r\n      className={\"idea\" + (selected ? \" selected\" : \"\")}\r\n      onMouseUp={linkerDesignation}\r\n      onClick={handleSelect}\r\n    >\r\n      <img\r\n        className=\"linker\"\r\n        src={linker}\r\n        alt=\"link\"\r\n        onMouseDown={linkInitiation}\r\n      />\r\n      {title}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./Modal.css\";\r\n\r\nconst Modal = ({ onClose, children }) => (\r\n  <div className=\"modal\">\r\n    <div>\r\n      {children}\r\n      <div className=\"closeButton\" onClick={onClose}>\r\n        &times;\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Modal;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport update from \"immutability-helper\";\r\nimport \"./IdeaForm.css\";\r\n\r\nconst IdeaForm = ({ onSubmit, idea }) => {\r\n  const [ideaState, setIdeaState] = useState(idea || { title: \"\" });\r\n\r\n  if (ideaState.id !== idea?.id) {\r\n    setIdeaState(idea || { title: \"\" });\r\n  }\r\n\r\n  const handleChange = useCallback(\r\n    (event) =>\r\n      setIdeaState(update(ideaState, { title: { $set: event.target.value } })),\r\n    [ideaState]\r\n  );\r\n\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      onSubmit(ideaState);\r\n      setIdeaState({ title: \"\" });\r\n    },\r\n    [onSubmit, ideaState]\r\n  );\r\n\r\n  const entries = {\r\n    addForm: {\r\n      header: \"Add an Idea\",\r\n      label: \"Enter Idea:\",\r\n      button: \"Add\",\r\n    },\r\n    editForm: {\r\n      header: \"Enter Idea Change\",\r\n      label: \"Change Idea:\",\r\n      button: \"Change\",\r\n    },\r\n  };\r\n\r\n  const formType = ideaState.id ? \"editForm\" : \"addForm\";\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <h1>{entries[formType].header}</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>{entries[formType].label}</label>\r\n        </div>\r\n        <div>\r\n          <textarea value={ideaState.title} onChange={handleChange} />\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"submitButton\"\r\n            type=\"submit\"\r\n            value={entries[formType].button}\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IdeaForm;\r\n","import React from \"react\";\r\nimport \"./Arrow.css\";\r\n\r\nconst Arrow = ({ start, end }) => {\r\n  const arrowHeight = end[0] - start[0];\r\n  const arrowWidth = end[1] - start[1];\r\n  const arrowLength =\r\n    Math.sqrt(arrowHeight * arrowHeight + arrowWidth * arrowWidth) - 4;\r\n  const arrowRotation = (180 / Math.PI) * Math.atan2(arrowHeight, arrowWidth);\r\n\r\n  const lineInfo = {\r\n    top: start[0] + \"px\",\r\n    left: start[1] + \"px\",\r\n    width: arrowLength + \"px\",\r\n    transform: \"rotate(\" + arrowRotation + \"deg)\",\r\n  };\r\n\r\n  return (\r\n    <div style={lineInfo} className=\"line\">\r\n      <div className=\"arrow\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Arrow;\r\n","import React, {\r\n  useCallback,\r\n  useContext,\r\n  useState,\r\n  useRef,\r\n  useEffect,\r\n} from \"react\";\r\nimport { IdeaContext } from \"./IdeaContext\";\r\nimport { ThemeContext } from \"./ThemeContext\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport { Idea } from \"./Idea\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Modal from \"./Modal\";\r\nimport IdeaForm from \"./IdeaForm\";\r\nimport update from \"immutability-helper\";\r\nimport Arrow from \"./Arrow\";\r\nimport \"./FreeFormIdeas.css\";\r\n\r\n/**\r\n * Calculates the coordinates of the end of arrow, pointing to the idea\r\n *\r\n * @param {{ height: number, width: number, top: number, left: number }} idea The idea the arrow is pointing to/from\r\n * @param {number} arrowRotation The rotation of the arrow (in degrees) in the range (-180, 180]\r\n * @returns {[number, number]} The coordinates ([top, left]) of the end of the arrow\r\n */\r\nexport function calcCoords(idea, arrowRotation) {\r\n  const { height, width, top: ideaTop, left: ideaLeft } = idea;\r\n  const posArrowRotation = Math.abs(arrowRotation);\r\n  const referenceAngleOne = (180 / Math.PI) * Math.atan2(height, width);\r\n  const referenceAngleTwo = 180 - referenceAngleOne;\r\n  let top, left;\r\n\r\n  if (\r\n    posArrowRotation > referenceAngleOne &&\r\n    posArrowRotation < referenceAngleTwo\r\n  ) {\r\n    top = ideaTop + (arrowRotation < 0 ? 0 : height);\r\n    left =\r\n      ideaLeft +\r\n      width / 2 +\r\n      (height / 2) * Math.tan(((90 - posArrowRotation) * Math.PI) / 180);\r\n  } else {\r\n    const isOnRight = posArrowRotation <= referenceAngleOne;\r\n\r\n    top =\r\n      ideaTop +\r\n      height / 2 +\r\n      (width / 2) *\r\n        Math.tan(\r\n          ((isOnRight ? arrowRotation : 180 - arrowRotation) * Math.PI) / 180\r\n        );\r\n    left = ideaLeft + (isOnRight ? width : 0);\r\n  }\r\n  return [top, left].map(Math.round);\r\n}\r\n\r\nconst FreeFormIdeas = () => {\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const { ideas, ideasDispatch, selectedId, setSelectedId } = useContext(\r\n    IdeaContext\r\n  );\r\n  const selectedIdea = ideas[selectedId];\r\n\r\n  const [coords, setCoords] = useState({ top: 0, left: 0 });\r\n\r\n  const [showIdeaModal, setShowIdeaModal] = useState(false);\r\n  const ideaModalShow = useCallback(() => setShowIdeaModal(true), []);\r\n  const ideaModalHide = useCallback(() => setShowIdeaModal(false), []);\r\n\r\n  const [linkerEnd, setLinkerEnd] = useState();\r\n  const [linkingState, setLinkingState] = useState(false);\r\n  const linkBreak = useCallback(() => setLinkingState(false), []);\r\n\r\n  const domElement = useRef();\r\n  const [canvasOffset, setcanvasOffset] = useState(60);\r\n  const updateCanvasOffset = () => {\r\n    setcanvasOffset(domElement.current.getBoundingClientRect().y);\r\n  };\r\n\r\n  const handleLinkStart = useCallback(\r\n    (e) => {\r\n      setLinkerEnd([e.clientY - canvasOffset, e.clientX]);\r\n      setLinkingState(true);\r\n    },\r\n    [canvasOffset]\r\n  );\r\n\r\n  const adjustLinker = useCallback(\r\n    (e) => {\r\n      if (!linkingState) return;\r\n      setLinkerEnd([e.clientY - canvasOffset, e.clientX]);\r\n    },\r\n    [linkingState, canvasOffset]\r\n  );\r\n\r\n  const handleLinkEnd = useCallback(\r\n    (id) => {\r\n      setLinkingState(false);\r\n      if (id === selectedId || !linkingState) return;\r\n      ideasDispatch({ type: \"link\", fromId: selectedId, toId: id });\r\n    },\r\n    [selectedId, linkingState, ideasDispatch]\r\n  );\r\n\r\n  const [, drop] = useDrop({\r\n    accept: ItemTypes.IDEA,\r\n    drop(item, monitor) {\r\n      const delta = monitor.getDifferenceFromInitialOffset();\r\n      const left = Math.round(item.left + delta.x);\r\n      const top = Math.round(item.top + delta.y);\r\n      ideasDispatch({\r\n        type: \"update\",\r\n        id: item.id,\r\n        data: { left, top },\r\n      });\r\n    },\r\n  });\r\n\r\n  const editIdea = useCallback(\r\n    (id) => {\r\n      setSelectedId(id);\r\n      ideaModalShow(true);\r\n    },\r\n    [ideaModalShow, setSelectedId]\r\n  );\r\n\r\n  const handleDoubleClick = useCallback(\r\n    (e) => {\r\n      if (e.target.className !== \"FreeFormIdeas\") return;\r\n      e.preventDefault();\r\n      setCoords({ top: e.clientY - canvasOffset, left: e.clientX });\r\n\r\n      setSelectedId(uuidv4());\r\n      setTimeout(ideaModalShow, 300);\r\n    },\r\n    [ideaModalShow, setSelectedId, canvasOffset]\r\n  );\r\n\r\n  const handleIdeaChange = useCallback(\r\n    (idea) => {\r\n      ideaModalHide();\r\n      if (idea.title === \"\") return;\r\n      if (!idea.id) {\r\n        ideasDispatch({\r\n          type: \"create\",\r\n          id: selectedId,\r\n          data: update(idea, { $merge: coords }),\r\n        });\r\n        return;\r\n      }\r\n      ideasDispatch({ type: \"update\", id: selectedId, data: idea });\r\n    },\r\n    [coords, selectedId, ideasDispatch, ideaModalHide]\r\n  );\r\n\r\n  const domElementRef = useCallback(\r\n    (domElementReference) => {\r\n      domElement.current = domElementReference;\r\n      updateCanvasOffset();\r\n      drop(domElementReference);\r\n    },\r\n    [drop]\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", updateCanvasOffset);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", updateCanvasOffset);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={domElementRef}\r\n      className=\"FreeFormIdeas\"\r\n      style={{ background: theme.freeFormIdeasColor }}\r\n      onDoubleClick={handleDoubleClick}\r\n      onMouseUp={linkBreak}\r\n      onMouseMove={adjustLinker}\r\n    >\r\n      {showIdeaModal && (\r\n        <Modal onClose={ideaModalHide}>\r\n          <IdeaForm onSubmit={handleIdeaChange} idea={selectedIdea} />\r\n        </Modal>\r\n      )}\r\n      {Object.entries(ideas).map(([key, idea]) => (\r\n        <Idea\r\n          key={key}\r\n          onEdit={editIdea}\r\n          onSelect={setSelectedId}\r\n          selected={idea.id === selectedId}\r\n          onLinkStart={handleLinkStart}\r\n          onLinkEnd={handleLinkEnd}\r\n          {...idea}\r\n        />\r\n      ))}\r\n      {Array.from(selectedIdea?.linkList || [], (endId) => {\r\n        const arrowHeight =\r\n          ideas[endId].top +\r\n          ideas[endId].height / 2 -\r\n          (selectedIdea.top + selectedIdea.height / 2);\r\n        const arrowWidth =\r\n          ideas[endId].left +\r\n          ideas[endId].width / 2 -\r\n          (selectedIdea.left + selectedIdea.width / 2);\r\n        const arrowRotationStart =\r\n          (180 / Math.PI) * Math.atan2(arrowHeight, arrowWidth);\r\n        const arrowRotationEnd =\r\n          arrowRotationStart - 180 * Math.sign(arrowRotationStart);\r\n        return (\r\n          <Arrow\r\n            key={`${selectedId} -> ${endId}`}\r\n            start={calcCoords(selectedIdea, arrowRotationStart)}\r\n            end={calcCoords(ideas[endId], arrowRotationEnd)}\r\n          />\r\n        );\r\n      })}\r\n      {linkingState && (\r\n        <div className=\"linkingArrow\">\r\n          <Arrow\r\n            start={[selectedIdea.top, selectedIdea.left]}\r\n            end={linkerEnd}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FreeFormIdeas;\r\n","import React, { useCallback, useContext, useState } from \"react\";\r\nimport IdeaForm from \"./IdeaForm\";\r\nimport { ThemeContext } from \"./ThemeContext\";\r\nimport { IdeaContext } from \"./IdeaContext\";\r\nimport update from \"immutability-helper\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./OptionBar.css\";\r\nimport { SketchPicker } from \"react-color\";\r\n\r\nconst OptionBar = () => {\r\n  const { ideas, selectedId, setSelectedId, ideasDispatch } = useContext(\r\n    IdeaContext\r\n  );\r\n  const selectedIdea = ideas[selectedId];\r\n\r\n  const { theme, updateTheme } = useContext(ThemeContext);\r\n  const [colorSelectorValue, setColorSelectorValue] = useState(0);\r\n  const [background, setBackground] = useState(\"#800080\");\r\n  const [showColorPalet, setShowColorPalet] = useState(false);\r\n\r\n  const changeColor = useCallback(\r\n    (color) => {\r\n      setBackground(color.hex);\r\n      updateTheme({\r\n        element: {\r\n          1: \"optionBarColor\",\r\n          2: \"freeFormIdeasColor\",\r\n          3: \"selectedIdeaColor\",\r\n        }[colorSelectorValue],\r\n        color: color.hex,\r\n      });\r\n    },\r\n    [colorSelectorValue, updateTheme]\r\n  );\r\n\r\n  const handleThemeSelection = useCallback((event) => {\r\n    setColorSelectorValue(event.target.value);\r\n    if (event.target.value === \"0\") {\r\n      setShowColorPalet(false);\r\n      return;\r\n    }\r\n    setShowColorPalet(true);\r\n  }, []);\r\n\r\n  const [showIdeaChangeForm, setShowIdeaChangeForm] = useState(false);\r\n  const toggleFormType = useCallback(() => {\r\n    setShowIdeaChangeForm(!showIdeaChangeForm);\r\n  }, [showIdeaChangeForm]);\r\n\r\n  const handleIdeaChange = useCallback(\r\n    (idea) => {\r\n      if (idea.title === \"\") return;\r\n      if (!idea.id) {\r\n        const newID = uuidv4();\r\n        ideasDispatch({\r\n          type: \"create\",\r\n          id: newID,\r\n          data: update(idea, { $merge: { top: 100, left: 100 } }),\r\n        });\r\n        setSelectedId(newID);\r\n        setShowIdeaChangeForm(false);\r\n        return;\r\n      }\r\n      toggleFormType();\r\n      ideasDispatch({ type: \"update\", id: selectedId, data: idea });\r\n    },\r\n    [toggleFormType, selectedId, ideasDispatch, setSelectedId]\r\n  );\r\n\r\n  return (\r\n    <div className=\"OptionBar\" style={{ background: theme.optionBarColor }}>\r\n      <div className=\"selector\">\r\n        <button style={{ margin: \"5px\" }} onClick={toggleFormType}>\r\n          Edit Selected Idea\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <IdeaForm\r\n          onSubmit={handleIdeaChange}\r\n          idea={showIdeaChangeForm ? selectedIdea : {}}\r\n        />\r\n      </div>\r\n      <div className=\"selector\">\r\n        <div>Select what you'd like to customize</div>\r\n        <select style={{ margin: \"5px\" }} onChange={handleThemeSelection}>\r\n          <option value=\"0\">None</option>\r\n          <option value=\"1\">Option Bar</option>\r\n          <option value=\"2\">Idea Canvas</option>\r\n          <option value=\"3\">Selection Outline</option>\r\n        </select>\r\n      </div>\r\n      {showColorPalet && (\r\n        <SketchPicker onChange={changeColor} color={background} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionBar;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport FreeFormIdeas from \"./FreeformIdeas\";\r\nimport OptionBar from \"./OptionBar\";\r\nimport { ThemeContext, useThemeManager } from \"./ThemeContext\";\r\nimport { IdeaContext, useIdeaManager } from \"./IdeaContext\";\r\n\r\nconst Window = () => {\r\n  const ideaContext = useIdeaManager();\r\n  const themeContext = useThemeManager();\r\n\r\n  return (\r\n    <div className=\"Containment\">\r\n      <IdeaContext.Provider value={ideaContext}>\r\n        <ThemeContext.Provider value={themeContext}>\r\n          <FreeFormIdeas />\r\n          <OptionBar />\r\n        </ThemeContext.Provider>\r\n      </IdeaContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Window;\r\n","import React from \"react\";\r\nimport Window from \"./Window\";\r\nimport \"./App.css\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport { DndProvider } from \"react-dnd\";\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <header className=\"App-header\">\r\n      <h1>Map Your Ideas Below</h1>\r\n    </header>\r\n    <DndProvider backend={HTML5Backend}>\r\n      <Window />\r\n    </DndProvider>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}